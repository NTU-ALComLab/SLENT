(declare-fun sigmaStar_safe_50 () String)
(declare-fun b_sigmaStar_safe_50 () Bool)
(declare-fun sigmaStar_safe_51 () String)
(declare-fun b_sigmaStar_safe_51 () Bool)
(declare-fun literal_7 () String)
(declare-fun b_literal_7 () Bool)
(declare-fun literal_11 () String)
(declare-fun b_literal_11 () Bool)
(declare-fun literal_16 () String)
(declare-fun b_literal_16 () Bool)
(declare-fun sigmaStar_061 () String)
(declare-fun b_sigmaStar_061 () Bool)
(declare-fun literal_19 () String)
(declare-fun b_literal_19 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_2 () String)
(declare-fun b_x_2 () Bool)
(declare-fun x_6 () String)
(declare-fun b_x_6 () Bool)
(declare-fun x_8 () String)
(declare-fun b_x_8 () Bool)
(declare-fun x_13 () String)
(declare-fun b_x_13 () Bool)
(declare-fun x_14 () String)
(declare-fun b_x_14 () Bool)
(declare-fun x_15 () String)
(declare-fun b_x_15 () Bool)
(declare-fun x_17 () String)
(declare-fun b_x_17 () Bool)
(declare-fun x_18 () String)
(declare-fun b_x_18 () Bool)
(declare-fun x_20 () String)
(declare-fun b_x_20 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)
(declare-fun sigmaStar_n0 () String)
(declare-fun b_sigmaStar_n0 () Bool)

(assert (= b_sigmaStar_safe_50 (RegexIn sigmaStar_safe_50 (RegexStar (RegexUnion (re.range "0" "9") (RegexUnion (re.range "a" "z") (re.range "A" "Z")))))))
(assert (= b_sigmaStar_safe_51 (RegexIn sigmaStar_safe_51 (RegexStar (RegexUnion (re.range "0" "9") (RegexUnion (re.range "a" "z") (re.range "A" "Z")))))))
(assert (and b_literal_7 (= literal_7 "[ <a href='mailto:")))
(assert (and b_literal_11 (= literal_11 "' title='")))
(assert (and b_literal_16 (= literal_16 "'>")))
(assert (and b_literal_19 (= literal_19 "</a> ]\\n")))
(assert (RegexIn atkPtn (RegexConcat (RegexUnion (Str2Reg "j") (RegexUnion (Str2Reg "|") (Str2Reg "J"))) (RegexConcat (RegexUnion (Str2Reg "a") (RegexUnion (Str2Reg "|") (Str2Reg "A"))) (RegexConcat (RegexUnion (Str2Reg "v") (RegexUnion (Str2Reg "|") (Str2Reg "V"))) (RegexConcat (RegexUnion (Str2Reg "a") (RegexUnion (Str2Reg "|") (Str2Reg "A"))) (RegexConcat (RegexUnion (Str2Reg "s") (RegexUnion (Str2Reg "|") (Str2Reg "S"))) (RegexConcat (RegexUnion (Str2Reg "c") (RegexUnion (Str2Reg "|") (Str2Reg "C"))) (RegexConcat (RegexUnion (Str2Reg "r") (RegexUnion (Str2Reg "|") (Str2Reg "R"))) (RegexConcat (RegexUnion (Str2Reg "i") (RegexUnion (Str2Reg "|") (Str2Reg "I"))) (RegexConcat (RegexUnion (Str2Reg "p") (RegexUnion (Str2Reg "|") (Str2Reg "P"))) (RegexConcat (RegexUnion (Str2Reg "t") (RegexUnion (Str2Reg "|") (Str2Reg "T"))) (Str2Reg ":")))))))))))))
(assert (= atk_sink (Concat atk_sigmaStar_1 (Concat atkPtn atk_sigmaStar_2))))
(assert (= b_x_2 (or (and (= x_2 sigmaStar_safe_50) b_sigmaStar_safe_50) (and (= x_2 sigmaStar_safe_51) b_sigmaStar_safe_51) ) ))
(assert (= b_x_6 (and (= x_6 (ReplaceAll x_2 "@" "&#64;") ) b_x_2) ))
(assert (= b_x_8 (and (= x_8 (Concat literal_7 x_6) ) b_literal_7 b_x_6) ))
(assert (= b_x_13 (and (= x_13 (ReplaceAll sigmaStar_n0 "@" "&#64;") ) b_sigmaStar_n0) ))
(assert (= b_x_14 (and (= x_14 (Concat x_8 literal_11) ) b_x_8 b_literal_11) ))
(assert (= b_x_15 (and (= x_15 (Concat x_14 x_13) ) b_x_14 b_x_13) ))
(assert (= b_x_17 (and (= x_17 (Concat x_15 literal_16) ) b_x_15 b_literal_16) ))
(assert (= b_x_18 (and (= x_18 (Concat x_17 sigmaStar_061) ) b_x_17 b_sigmaStar_061) ))
(assert (= b_x_20 (and (= x_20 (Concat x_18 literal_19) ) b_x_18 b_literal_19) ))
(assert (and (= sink x_20) (= sink atk_sink) b_x_20))
(assert (< 50 (+ (Length x_2) (Length sink)) ) )
(check-sat)
