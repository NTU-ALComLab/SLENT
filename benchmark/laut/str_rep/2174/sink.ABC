(declare-fun sigmaStar_050 () String)
(declare-fun b_sigmaStar_050 () Bool)
(declare-fun sigmaStar_751 () String)
(declare-fun b_sigmaStar_751 () Bool)
(declare-fun literal_13 () String)
(declare-fun b_literal_13 () Bool)
(declare-fun literal_15 () String)
(declare-fun b_literal_15 () Bool)
(declare-fun sigmaStar_safe_57 () String)
(declare-fun b_sigmaStar_safe_57 () Bool)
(declare-fun sigmaStar_safe_58 () String)
(declare-fun b_sigmaStar_safe_58 () Bool)
(declare-fun sigmaStar_safe_59 () String)
(declare-fun b_sigmaStar_safe_59 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_8 () String)
(declare-fun b_x_8 () Bool)
(declare-fun x_12 () String)
(declare-fun b_x_12 () Bool)
(declare-fun x_14 () String)
(declare-fun b_x_14 () Bool)
(declare-fun x_16 () String)
(declare-fun b_x_16 () Bool)
(declare-fun x_17 () String)
(declare-fun b_x_17 () Bool)
(declare-fun x_18 () String)
(declare-fun b_x_18 () Bool)
(declare-fun x_19 () String)
(declare-fun b_x_19 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)

(assert (and b_literal_13 (= literal_13 "/")))
(assert (and b_literal_15 (= literal_15 ".gif")))
(assert (= b_sigmaStar_safe_57 (RegexIn sigmaStar_safe_57 (RegexStar (RegexUnion (re.range "0" "9") (RegexUnion (re.range "a" "z") (re.range "A" "Z")))))))
(assert (= b_sigmaStar_safe_58 (RegexIn sigmaStar_safe_58 (RegexStar (RegexUnion (re.range "0" "9") (RegexUnion (re.range "a" "z") (re.range "A" "Z")))))))
(assert (= b_sigmaStar_safe_59 (RegexIn sigmaStar_safe_59 (RegexStar (RegexUnion (re.range "0" "9") (RegexUnion (re.range "a" "z") (re.range "A" "Z")))))))
(assert (RegexIn atkPtn (Str2Reg "/evil")))
(assert (= atk_sink (Concat atk_sigmaStar_1 (Concat atkPtn atk_sigmaStar_2))))
(assert (= b_x_8 (or (and (= x_8 sigmaStar_050) b_sigmaStar_050) (and (= x_8 sigmaStar_751) b_sigmaStar_751) ) ))
(assert (= b_x_12 (and (= x_12 (ReplaceAll x_8 ".gif" "") ) b_x_8) ))
(assert (= b_x_14 (and (= x_14 (Concat literal_13 x_12) ) b_literal_13 b_x_12) ))
(assert (= b_x_16 (and (= x_16 (Concat x_14 literal_15) ) b_x_14 b_literal_15) ))
(assert (= b_x_17 (or (and (= x_17 sigmaStar_safe_57) b_sigmaStar_safe_57) (and (= x_17 x_16) b_x_16) ) ))
(assert (= b_x_18 (or (and (= x_18 x_17) b_x_17) (and (= x_18 sigmaStar_safe_58) b_sigmaStar_safe_58) ) ))
(assert (= b_x_19 (or (and (= x_19 x_18) b_x_18) (and (= x_19 sigmaStar_safe_59) b_sigmaStar_safe_59) ) ))
(assert (and (= sink x_19) (= sink atk_sink) b_x_19))
(assert (= 50 (+ (Length x_19) (Length sink)) ) )
(check-sat)
