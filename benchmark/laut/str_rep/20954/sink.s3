(declare-fun sigmaStar_safe_50 () String)
(declare-fun b_sigmaStar_safe_50 () Bool)
(declare-fun sigmaStar_safe_51 () String)
(declare-fun b_sigmaStar_safe_51 () Bool)
(declare-fun sigmaStar_152 () String)
(declare-fun b_sigmaStar_152 () Bool)
(declare-fun literal_11 () String)
(declare-fun b_literal_11 () Bool)
(declare-fun literal_10 () String)
(declare-fun b_literal_10 () Bool)
(declare-fun sigmaStar_555 () String)
(declare-fun b_sigmaStar_555 () Bool)
(declare-fun literal_21 () String)
(declare-fun b_literal_21 () Bool)
(declare-fun sigmaStar_safe_60 () String)
(declare-fun b_sigmaStar_safe_60 () Bool)
(declare-fun sigmaStar_safe_61 () String)
(declare-fun b_sigmaStar_safe_61 () Bool)
(declare-fun literal_22 () String)
(declare-fun b_literal_22 () Bool)
(declare-fun sigmaStar_2063 () String)
(declare-fun b_sigmaStar_2063 () Bool)
(declare-fun literal_26 () String)
(declare-fun b_literal_26 () Bool)
(declare-fun literal_29 () String)
(declare-fun b_literal_29 () Bool)
(declare-fun literal_31 () String)
(declare-fun b_literal_31 () Bool)
(declare-fun literal_28 () String)
(declare-fun b_literal_28 () Bool)
(declare-fun sigmaStar_068 () String)
(declare-fun b_sigmaStar_068 () Bool)
(declare-fun literal_39 () String)
(declare-fun b_literal_39 () Bool)
(declare-fun literal_38 () String)
(declare-fun b_literal_38 () Bool)
(declare-fun literal_37 () String)
(declare-fun b_literal_37 () Bool)
(declare-fun literal_36 () String)
(declare-fun b_literal_36 () Bool)
(declare-fun literal_35 () String)
(declare-fun b_literal_35 () Bool)
(declare-fun literal_34 () String)
(declare-fun b_literal_34 () Bool)
(declare-fun literal_33 () String)
(declare-fun b_literal_33 () Bool)
(declare-fun literal_49 () String)
(declare-fun b_literal_49 () Bool)
(declare-fun literal_50 () String)
(declare-fun b_literal_50 () Bool)
(declare-fun literal_51 () String)
(declare-fun b_literal_51 () Bool)
(declare-fun literal_52 () String)
(declare-fun b_literal_52 () Bool)
(declare-fun literal_53 () String)
(declare-fun b_literal_53 () Bool)
(declare-fun literal_54 () String)
(declare-fun b_literal_54 () Bool)
(declare-fun literal_32 () String)
(declare-fun b_literal_32 () Bool)
(declare-fun literal_55 () String)
(declare-fun b_literal_55 () Bool)
(declare-fun literal_64 () String)
(declare-fun b_literal_64 () Bool)
(declare-fun literal_72 () String)
(declare-fun b_literal_72 () Bool)
(declare-fun literal_80 () String)
(declare-fun b_literal_80 () Bool)
(declare-fun literal_79 () String)
(declare-fun b_literal_79 () Bool)
(declare-fun literal_78 () String)
(declare-fun b_literal_78 () Bool)
(declare-fun literal_77 () String)
(declare-fun b_literal_77 () Bool)
(declare-fun literal_76 () String)
(declare-fun b_literal_76 () Bool)
(declare-fun literal_75 () String)
(declare-fun b_literal_75 () Bool)
(declare-fun literal_74 () String)
(declare-fun b_literal_74 () Bool)
(declare-fun literal_81 () String)
(declare-fun b_literal_81 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_9 () String)
(declare-fun b_x_9 () Bool)
(declare-fun x_12 () String)
(declare-fun b_x_12 () Bool)
(declare-fun x_13 () String)
(declare-fun b_x_13 () Bool)
(declare-fun x_17 () String)
(declare-fun b_x_17 () Bool)
(declare-fun x_19 () String)
(declare-fun b_x_19 () Bool)
(declare-fun x_23 () String)
(declare-fun b_x_23 () Bool)
(declare-fun x_24 () String)
(declare-fun b_x_24 () Bool)
(declare-fun x_25 () String)
(declare-fun b_x_25 () Bool)
(declare-fun x_27 () String)
(declare-fun b_x_27 () Bool)
(declare-fun x_30 () String)
(declare-fun b_x_30 () Bool)
(declare-fun x_40 () String)
(declare-fun b_x_40 () Bool)
(declare-fun x_41 () String)
(declare-fun b_x_41 () Bool)
(declare-fun x_42 () String)
(declare-fun b_x_42 () Bool)
(declare-fun x_43 () String)
(declare-fun b_x_43 () Bool)
(declare-fun x_44 () String)
(declare-fun b_x_44 () Bool)
(declare-fun x_45 () String)
(declare-fun b_x_45 () Bool)
(declare-fun x_46 () String)
(declare-fun b_x_46 () Bool)
(declare-fun x_47 () String)
(declare-fun b_x_47 () Bool)
(declare-fun x_48 () String)
(declare-fun b_x_48 () Bool)
(declare-fun x_56 () String)
(declare-fun b_x_56 () Bool)
(declare-fun x_57 () String)
(declare-fun b_x_57 () Bool)
(declare-fun x_58 () String)
(declare-fun b_x_58 () Bool)
(declare-fun x_59 () String)
(declare-fun b_x_59 () Bool)
(declare-fun x_60 () String)
(declare-fun b_x_60 () Bool)
(declare-fun x_61 () String)
(declare-fun b_x_61 () Bool)
(declare-fun x_62 () String)
(declare-fun b_x_62 () Bool)
(declare-fun x_63 () String)
(declare-fun b_x_63 () Bool)
(declare-fun x_65 () String)
(declare-fun b_x_65 () Bool)
(declare-fun x_66 () String)
(declare-fun b_x_66 () Bool)
(declare-fun x_67 () String)
(declare-fun b_x_67 () Bool)
(declare-fun x_68 () String)
(declare-fun b_x_68 () Bool)
(declare-fun x_69 () String)
(declare-fun b_x_69 () Bool)
(declare-fun x_70 () String)
(declare-fun b_x_70 () Bool)
(declare-fun x_71 () String)
(declare-fun b_x_71 () Bool)
(declare-fun x_73 () String)
(declare-fun b_x_73 () Bool)
(declare-fun x_82 () String)
(declare-fun b_x_82 () Bool)
(declare-fun x_83 () String)
(declare-fun b_x_83 () Bool)
(declare-fun x_84 () String)
(declare-fun b_x_84 () Bool)
(declare-fun x_85 () String)
(declare-fun b_x_85 () Bool)
(declare-fun x_86 () String)
(declare-fun b_x_86 () Bool)
(declare-fun x_87 () String)
(declare-fun b_x_87 () Bool)
(declare-fun x_88 () String)
(declare-fun b_x_88 () Bool)
(declare-fun x_89 () String)
(declare-fun b_x_89 () Bool)
(declare-fun x_90 () String)
(declare-fun b_x_90 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)
(declare-fun sigmaStar_n0 () String)
(declare-fun b_sigmaStar_n0 () Bool)
(declare-fun sigmaStar_n1 () String)
(declare-fun b_sigmaStar_n1 () Bool)
(declare-fun sigmaStar_n2 () String)
(declare-fun b_sigmaStar_n2 () Bool)

(assert (= b_sigmaStar_safe_50 (In sigmaStar_safe_50 (Star (Union "0" (Union "1" (Union "2" (Union "3" (Union "4" (Union "5" (Union "6" (Union "7" (Union "8" (Union "9" (Union "a" (Union "b" (Union "c" (Union "d" (Union "e" (Union "f" (Union "g" (Union "h" (Union "i" (Union "j" (Union "k" (Union "l" (Union "m" (Union "n" (Union "o" (Union "p" (Union "q" (Union "r" (Union "s" (Union "t" (Union "u" (Union "v" (Union "w" (Union "x" (Union "y" (Union "z" (Union "A" (Union "B" (Union "C" (Union "D" (Union "E" (Union "F" (Union "G" (Union "H" (Union "I" (Union "J" (Union "K" (Union "L" (Union "M" (Union "N" (Union "O" (Union "P" (Union "Q" (Union "R" (Union "S" (Union "T" (Union "U" (Union "V" (Union "W" (Union "X" (Union "Y" "Z")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (= b_sigmaStar_safe_51 (In sigmaStar_safe_51 (Star (Union "0" (Union "1" (Union "2" (Union "3" (Union "4" (Union "5" (Union "6" (Union "7" (Union "8" (Union "9" (Union "a" (Union "b" (Union "c" (Union "d" (Union "e" (Union "f" (Union "g" (Union "h" (Union "i" (Union "j" (Union "k" (Union "l" (Union "m" (Union "n" (Union "o" (Union "p" (Union "q" (Union "r" (Union "s" (Union "t" (Union "u" (Union "v" (Union "w" (Union "x" (Union "y" (Union "z" (Union "A" (Union "B" (Union "C" (Union "D" (Union "E" (Union "F" (Union "G" (Union "H" (Union "I" (Union "J" (Union "K" (Union "L" (Union "M" (Union "N" (Union "O" (Union "P" (Union "Q" (Union "R" (Union "S" (Union "T" (Union "U" (Union "V" (Union "W" (Union "X" (Union "Y" "Z")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (and b_literal_11 (= literal_11 "")))
(assert (and b_literal_10 (= literal_10 "\x20\x4f\x52\x20\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d")))
(assert (and b_literal_21 (= literal_21 "\x20\x4f\x52\x20\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d")))
(assert (= b_sigmaStar_safe_60 (In sigmaStar_safe_60 (Star (Union "0" (Union "1" (Union "2" (Union "3" (Union "4" (Union "5" (Union "6" (Union "7" (Union "8" (Union "9" (Union "a" (Union "b" (Union "c" (Union "d" (Union "e" (Union "f" (Union "g" (Union "h" (Union "i" (Union "j" (Union "k" (Union "l" (Union "m" (Union "n" (Union "o" (Union "p" (Union "q" (Union "r" (Union "s" (Union "t" (Union "u" (Union "v" (Union "w" (Union "x" (Union "y" (Union "z" (Union "A" (Union "B" (Union "C" (Union "D" (Union "E" (Union "F" (Union "G" (Union "H" (Union "I" (Union "J" (Union "K" (Union "L" (Union "M" (Union "N" (Union "O" (Union "P" (Union "Q" (Union "R" (Union "S" (Union "T" (Union "U" (Union "V" (Union "W" (Union "X" (Union "Y" "Z")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (= b_sigmaStar_safe_61 (In sigmaStar_safe_61 (Star (Union "0" (Union "1" (Union "2" (Union "3" (Union "4" (Union "5" (Union "6" (Union "7" (Union "8" (Union "9" (Union "a" (Union "b" (Union "c" (Union "d" (Union "e" (Union "f" (Union "g" (Union "h" (Union "i" (Union "j" (Union "k" (Union "l" (Union "m" (Union "n" (Union "o" (Union "p" (Union "q" (Union "r" (Union "s" (Union "t" (Union "u" (Union "v" (Union "w" (Union "x" (Union "y" (Union "z" (Union "A" (Union "B" (Union "C" (Union "D" (Union "E" (Union "F" (Union "G" (Union "H" (Union "I" (Union "J" (Union "K" (Union "L" (Union "M" (Union "N" (Union "O" (Union "P" (Union "Q" (Union "R" (Union "S" (Union "T" (Union "U" (Union "V" (Union "W" (Union "X" (Union "Y" "Z")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (and b_literal_22 (= literal_22 "\x20\x28\x61\x64\x6d\x69\x6e\x5f\x72\x69\x67\x68\x74\x73\x3d\x27")))
(assert (and b_literal_26 (= literal_26 "\x27\x29")))
(assert (and b_literal_29 (= literal_29 "\x63\x6f\x6d\x6d\x65\x6e\x74\x5f\x74\x79\x70\x65\x3d\x27\x50\x27\x20\x41\x4e\x44\x20\x63\x6f\x6d\x6d\x65\x6e\x74\x5f\x69\x74\x65\x6d\x5f\x69\x64\x3d\x27")))
(assert (and b_literal_31 (= literal_31 "\x27")))
(assert (and b_literal_28 (= literal_28 "\x61\x6c\x62\x75\x6d\x5f\x69\x64\x3d\x27")))
(assert (and b_literal_39 (= literal_39 "\x28\x70\x68\x6f\x74\x6f\x5f\x69\x64\x29")))
(assert (and b_literal_38 (= literal_38 "\x28\x2a\x29")))
(assert (and b_literal_37 (= literal_37 "\x28\x2a\x29")))
(assert (and b_literal_36 (= literal_36 "\x28\x2a\x29")))
(assert (and b_literal_35 (= literal_35 "\x28\x63\x6f\x6d\x6d\x65\x6e\x74\x5f\x69\x64\x29")))
(assert (and b_literal_34 (= literal_34 "\x28\x2a\x29")))
(assert (and b_literal_33 (= literal_33 "\x28\x2a\x29")))
(assert (and b_literal_49 (= literal_49 "\x53\x45\x4c\x45\x43\x54\x20\x43\x6f\x75\x6e\x74")))
(assert (and b_literal_50 (= literal_50 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x31\x27")))
(assert (and b_literal_51 (= literal_51 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x32\x27")))
(assert (and b_literal_52 (= literal_52 "\x27")))
(assert (and b_literal_53 (= literal_53 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x33\x27")))
(assert (and b_literal_54 (= literal_54 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x34\x27")))
(assert (and b_literal_32 (= literal_32 "\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d\x27")))
(assert (and b_literal_55 (= literal_55 "\x27")))
(assert (and b_literal_64 (= literal_64 "\x20\x46\x52\x4f\x4d\x20")))
(assert (and b_literal_72 (= literal_72 "\x20\x57\x48\x45\x52\x45\x20")))
(assert (and b_literal_80 (= literal_80 "\x70\x68\x6f\x74\x6f\x73")))
(assert (and b_literal_79 (= literal_79 "\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74")))
(assert (and b_literal_78 (= literal_78 "\x61\x64\x6d\x69\x6e")))
(assert (and b_literal_77 (= literal_77 "\x61\x64\x6d\x69\x6e")))
(assert (and b_literal_76 (= literal_76 "\x63\x6f\x6d\x6d\x65\x6e\x74\x73")))
(assert (and b_literal_75 (= literal_75 "\x61\x64\x6d\x69\x6e")))
(assert (and b_literal_74 (= literal_74 "\x61\x64\x6d\x69\x6e")))
(assert (and b_literal_81 (= literal_81 "")))
(assert (In atkPtn (Concat (Union "%27" "'") "union")))
(assert (= atk_sink (Concat atk_sigmaStar_1 (Concat atkPtn atk_sigmaStar_2))))
(assert (= b_x_9 (or (and (= x_9 sigmaStar_safe_50) b_sigmaStar_safe_50) (and (= x_9 sigmaStar_safe_51) b_sigmaStar_safe_51) ) ))
(assert (= b_x_12 (or (and (= x_12 x_9) b_x_9) (and (= x_12 sigmaStar_152) b_sigmaStar_152) ) ))
(assert (= b_x_13 (or (and (= x_13 x_12) b_x_12) (and (= x_13 literal_11) b_literal_11) ) ))
(assert (= b_x_17 (and (= x_17 (Concat literal_10 sigmaStar_555) ) b_literal_10 b_sigmaStar_555) ))
(assert (= b_x_19 (and (= x_19 (ReplaceAll x_13 "." "' OR admin_rights='") ) b_x_13) ))
(assert (= b_x_23 (and (= x_23 (Concat x_17 literal_21) ) b_x_17 b_literal_21) ))
(assert (= b_x_24 (or (and (= x_24 sigmaStar_safe_60) b_sigmaStar_safe_60) (and (= x_24 sigmaStar_safe_61) b_sigmaStar_safe_61) ) ))
(assert (= b_x_25 (and (= x_25 (Concat literal_22 x_19) ) b_literal_22 b_x_19) ))
(assert (= b_x_27 (and (= x_27 (Concat x_23 sigmaStar_2063) ) b_x_23 b_sigmaStar_2063) ))
(assert (= b_x_30 (and (= x_30 (Concat x_25 literal_26) ) b_x_25 b_literal_26) ))
(assert (= b_x_40 (and (= x_40 (Concat literal_29 x_24) ) b_literal_29 b_x_24) ))
(assert (= b_x_41 (and (= x_41 (Concat x_27 literal_31) ) b_x_27 b_literal_31) ))
(assert (= b_x_42 (and (= x_42 (Concat literal_28 sigmaStar_068) ) b_literal_28 b_sigmaStar_068) ))
(assert (= b_x_43 (or (and (= x_43 literal_39) b_literal_39) (and (= x_43 literal_38) b_literal_38) ) ))
(assert (= b_x_44 (or (and (= x_44 x_43) b_x_43) (and (= x_44 literal_37) b_literal_37) ) ))
(assert (= b_x_45 (or (and (= x_45 x_44) b_x_44) (and (= x_45 literal_36) b_literal_36) ) ))
(assert (= b_x_46 (or (and (= x_46 x_45) b_x_45) (and (= x_46 literal_35) b_literal_35) ) ))
(assert (= b_x_47 (or (and (= x_47 x_46) b_x_46) (and (= x_47 literal_34) b_literal_34) ) ))
(assert (= b_x_48 (or (and (= x_48 x_47) b_x_47) (and (= x_48 literal_33) b_literal_33) ) ))
(assert (= b_x_56 (and (= x_56 (Concat literal_49 x_48) ) b_literal_49 b_x_48) ))
(assert (= b_x_57 (and (= x_57 (Concat x_30 literal_50) ) b_x_30 b_literal_50) ))
(assert (= b_x_58 (and (= x_58 (Concat sigmaStar_n0 literal_51) ) b_sigmaStar_n0 b_literal_51) ))
(assert (= b_x_59 (and (= x_59 (Concat x_40 literal_52) ) b_x_40 b_literal_52) ))
(assert (= b_x_60 (and (= x_60 (Concat sigmaStar_n1 literal_53) ) b_sigmaStar_n1 b_literal_53) ))
(assert (= b_x_61 (and (= x_61 (Concat sigmaStar_n2 literal_54) ) b_sigmaStar_n2 b_literal_54) ))
(assert (= b_x_62 (and (= x_62 (Concat literal_32 x_41) ) b_literal_32 b_x_41) ))
(assert (= b_x_63 (and (= x_63 (Concat x_42 literal_55) ) b_x_42 b_literal_55) ))
(assert (= b_x_65 (and (= x_65 (Concat x_56 literal_64) ) b_x_56 b_literal_64) ))
(assert (= b_x_66 (or (and (= x_66 x_63) b_x_63) (and (= x_66 x_62) b_x_62) ) ))
(assert (= b_x_67 (or (and (= x_67 x_66) b_x_66) (and (= x_67 x_61) b_x_61) ) ))
(assert (= b_x_68 (or (and (= x_68 x_67) b_x_67) (and (= x_68 x_60) b_x_60) ) ))
(assert (= b_x_69 (or (and (= x_69 x_68) b_x_68) (and (= x_69 x_59) b_x_59) ) ))
(assert (= b_x_70 (or (and (= x_70 x_69) b_x_69) (and (= x_70 x_58) b_x_58) ) ))
(assert (= b_x_71 (or (and (= x_71 x_70) b_x_70) (and (= x_71 x_57) b_x_57) ) ))
(assert (= b_x_73 (and (= x_73 (Concat literal_72 x_71) ) b_literal_72 b_x_71) ))
(assert (= b_x_82 (or (and (= x_82 literal_80) b_literal_80) (and (= x_82 literal_79) b_literal_79) ) ))
(assert (= b_x_83 (or (and (= x_83 x_82) b_x_82) (and (= x_83 literal_78) b_literal_78) ) ))
(assert (= b_x_84 (or (and (= x_84 x_83) b_x_83) (and (= x_84 literal_77) b_literal_77) ) ))
(assert (= b_x_85 (or (and (= x_85 x_84) b_x_84) (and (= x_85 literal_76) b_literal_76) ) ))
(assert (= b_x_86 (or (and (= x_86 x_85) b_x_85) (and (= x_86 literal_75) b_literal_75) ) ))
(assert (= b_x_87 (or (and (= x_87 x_86) b_x_86) (and (= x_87 literal_74) b_literal_74) ) ))
(assert (= b_x_88 (or (and (= x_88 x_73) b_x_73) (and (= x_88 literal_81) b_literal_81) ) ))
(assert (= b_x_89 (and (= x_89 (Concat x_65 x_87) ) b_x_65 b_x_87) ))
(assert (= b_x_90 (and (= x_90 (Concat x_89 x_88) ) b_x_89 b_x_88) ))
(assert (and (= sink x_90) (= sink atk_sink) b_x_90))
(assert (< 50 (+ (Length x_88) (Length sink)) ) )
(check-sat)
