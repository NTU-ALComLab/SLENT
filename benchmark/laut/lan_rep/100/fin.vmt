(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun y40 () Bool)
(declare-fun y40.next () Bool)
(declare-fun y41 () Bool)
(declare-fun y41.next () Bool)
(declare-fun y42 () Bool)
(declare-fun y42.next () Bool)
(declare-fun y43 () Bool)
(declare-fun y43.next () Bool)
(declare-fun y44 () Bool)
(declare-fun y44.next () Bool)
(declare-fun y45 () Bool)
(declare-fun y45.next () Bool)
(declare-fun y46 () Bool)
(declare-fun y46.next () Bool)
(declare-fun y47 () Bool)
(declare-fun y47.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun s12 () Bool)
(declare-fun s12.next () Bool)
(declare-fun n0 () Int)
(declare-fun n0.next () Int)
(declare-fun n1 () Int)
(declare-fun n1.next () Int)
(declare-fun K0 () Int)
(declare-fun K0.next () Int)
(declare-fun K1 () Int)
(declare-fun K1.next () Int)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! y40 :next y40.next))
(define-fun nxt9 () Bool (! y41 :next y41.next))
(define-fun nxt10 () Bool (! y42 :next y42.next))
(define-fun nxt11 () Bool (! y43 :next y43.next))
(define-fun nxt12 () Bool (! y44 :next y44.next))
(define-fun nxt13 () Bool (! y45 :next y45.next))
(define-fun nxt14 () Bool (! y46 :next y46.next))
(define-fun nxt15 () Bool (! y47 :next y47.next))
(define-fun nxt16 () Bool (! s0 :next s0.next))
(define-fun nxt17 () Bool (! s1 :next s1.next))
(define-fun nxt18 () Bool (! s2 :next s2.next))
(define-fun nxt19 () Bool (! s3 :next s3.next))
(define-fun nxt20 () Bool (! s4 :next s4.next))
(define-fun nxt21 () Bool (! s5 :next s5.next))
(define-fun nxt22 () Bool (! s6 :next s6.next))
(define-fun nxt23 () Bool (! s7 :next s7.next))
(define-fun nxt24 () Bool (! s8 :next s8.next))
(define-fun nxt25 () Bool (! s9 :next s9.next))
(define-fun nxt26 () Bool (! s10 :next s10.next))
(define-fun nxt27 () Bool (! s11 :next s11.next))
(define-fun nxt28 () Bool (! s12 :next s12.next))
(define-fun nxt29 () Bool (! n0 :next n0.next))
(define-fun nxt30 () Bool (! n1 :next n1.next))
(define-fun nxt31 () Bool (! K0 :next K0.next))
(define-fun nxt32 () Bool (! K1 :next K1.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun leftAngle ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) x7))
(define-fun rightAngle ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) x6 (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 () Bool false)
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (not s0) s1 (not s2) s3))
(define-fun d4 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 (not x2) x3 (not x4) x5 (not x6) x7 (not s0) s1 s2 (not s3) (not s0.next) (not s1.next) (not s2.next) s3.next))
(define-fun d5 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 (not x5) x6 (not x7) (not s0) s1 (not s2) (not s3) s0.next (not s1.next) (not s2.next) (not s3.next)))
(define-fun d6 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 x6 (not x7) (not s0) s1 s2 s3 (not s0.next) s1.next s2.next (not s3.next)))
(define-fun d7 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) s0 (not s1) (not s2) (not s3) (not s0.next) (not s1.next) s2.next s3.next))
(define-fun d8 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) x4 x5 (not x6) (not x7) (not s0) (not s1) s2 (not s3) (not s0.next) s1.next (not s2.next) (not s3.next)))
(define-fun d9 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 (not x2) x3 (not x4) (not x5) x6 (not x7) (not s0) (not s1) (not s2) s3 (not s0.next) (not s1.next) s2.next (not s3.next)))
(define-fun d10 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) (not x7) (not s0) s1 (not s2) s3 s0.next (not s1.next) (not s2.next) s3.next))
(define-fun d11 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) x5 (not x6) (not x7) (not s0) (not s1) (not s2) (not s3) (not s0.next) s1.next s2.next s3.next))
(define-fun d12 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 (not x6) (not x7) s0 (not s1) (not s2) s3 (not s0.next) (not s1.next) (not s2.next) (not s3.next)))
(define-fun d13 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d4 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d5 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d6 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d7 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d8 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d9 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d10 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d11 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d12 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next)))
(define-fun d14 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (not s0) (not s1) s2 s3))
(define-fun d15 ((s0 Bool)) Bool (not s0))
(define-fun d16 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d17 ((s0 Bool)) Bool (not s0))
(define-fun d18 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n0.next (+ n0 1))))
(define-fun d19 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n0.next n0)))
(define-fun d20 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (n0 Int) (s0.next Bool) (n0.next Int)) Bool (and (d16 x0 s0 s0.next) (or (d18 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next) (d19 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next))))
(define-fun d21 ((s0 Bool) (s1 Bool)) Bool (and (not s1) (d15 s0)))
(define-fun d22 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (n0.next Int)) Bool (and (= s1.next s1) (not (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (not (rightAngle x0 x1 x2 x3 x4 x5 x6 x7)) (d20 x0 x1 x2 x3 x4 x5 x6 x7 s0 n0 s0.next n0.next)))
(define-fun d23 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (and (not s1) s1.next (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (and s1 (not s1.next) (rightAngle x0 x1 x2 x3 x4 x5 x6 x7))))
(define-fun d24 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (n0.next Int)) Bool (and (= s0.next s0) (= n0.next n0) (d23 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d25 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (n0.next Int)) Bool (or (d22 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 n0 s0.next s1.next n0.next) (d24 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 n0 s0.next s1.next n0.next)))
(define-fun d26 ((s0 Bool) (s1 Bool)) Bool (and (not s1) (d17 s0)))
(define-fun d27 ((s2 Bool)) Bool (not s2))
(define-fun d28 ((x0 Bool) (x2 Bool) (x4 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x2) x4 (not s2) s2.next))
(define-fun d29 ((x0 Bool) (x2 Bool) (x4 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x2 (not x4) x6 (not s2) s2.next))
(define-fun d30 ((x0 Bool) (x4 Bool) (x5 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x4 (not x5) x7 (not s2) s2.next))
(define-fun d31 ((x0 Bool) (x2 Bool) (x5 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x2) x5 (not s2) s2.next))
(define-fun d32 ((x0 Bool) (x2 Bool) (x4 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x2 (not x4) x7 (not s2) s2.next))
(define-fun d33 ((x0 Bool) (x2 Bool) (x3 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x2) (not x3) x6 (not x7) (not s2) s2.next))
(define-fun d34 ((x0 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x5 (not x6) (not x7) (not s2) s2.next))
(define-fun d35 ((x0 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x3) x4 (not x5) (not s2) s2.next))
(define-fun d36 ((x0 Bool) (x3 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x3 (not x6) (not s2) s2.next))
(define-fun d37 ((x0 Bool) (x3 Bool) (x5 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x3 x5 (not s2) s2.next))
(define-fun d38 ((x0 Bool) (x1 Bool) (x2 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 x2 (not s2) s2.next))
(define-fun d39 ((x0 Bool) (x1 Bool) (x2 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x1) (not x2) (not s2) s2.next))
(define-fun d40 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d28 x0 x2 x4 s2 s2.next) (d29 x0 x2 x4 x6 s2 s2.next) (d30 x0 x4 x5 x7 s2 s2.next) (d31 x0 x2 x5 s2 s2.next) (d32 x0 x2 x4 x7 s2 s2.next) (d33 x0 x2 x3 x6 x7 s2 s2.next) (d34 x0 x5 x6 x7 s2 s2.next) (d35 x0 x3 x4 x5 s2 s2.next) (d36 x0 x3 x6 s2 s2.next) (d37 x0 x3 x5 s2 s2.next) (d38 x0 x1 x2 s2 s2.next) (d39 x0 x1 x2 s2 s2.next)))
(define-fun d41 ((s2 Bool)) Bool s2)
(define-fun d42 ((s2 Bool)) Bool (not s2))
(define-fun d43 ((x0 Bool) (x1 Bool) (x2 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 (not x2) (not x4) (not x5) x6 x7 (not s2) (not s2.next)))
(define-fun d44 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x7 (not s2) (not s2.next)))
(define-fun d45 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 (not x5) x6 (not x7) (not s2) (not s2.next)))
(define-fun d46 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 (not s2) (not s2.next)))
(define-fun d47 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 (not x2) x3 (not x4) (not x5) x6 (not s2) (not s2.next)))
(define-fun d48 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) (not x4) (not x5) (not x6) (not s2) (not s2.next)))
(define-fun d49 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) (not s2) (not s2.next)))
(define-fun d50 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d43 x0 x1 x2 x4 x5 x6 x7 s2 s2.next) (d44 x0 x1 x2 x3 x4 x5 x7 s2 s2.next) (d45 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next) (d46 x0 x1 x2 x3 x4 x5 x6 s2 s2.next) (d47 x0 x1 x2 x3 x4 x5 x6 s2 s2.next) (d48 x0 x1 x2 x3 x4 x5 x6 s2 s2.next) (d49 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d51 ((s2 Bool)) Bool (not s2))
(define-fun d52 ((s2 Bool) (s3 Bool)) Bool (and (not s3) (d42 s2)))
(define-fun d53 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not s3) (not s3.next) (not (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (not (rightAngle x0 x1 x2 x3 x4 x5 x6 x7)) (d50 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d54 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and s3 s3.next (not (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (not (rightAngle x0 x1 x2 x3 x4 x5 x6 x7)) (d40 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d55 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not s3) s3.next (leftAngle x0 x1 x2 x3 x4 x5 x6 x7) (d51 s2) (d27 s2.next)))
(define-fun d56 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and s3 (not s3.next) (rightAngle x0 x1 x2 x3 x4 x5 x6 x7) (d41 s2) (d42 s2.next)))
(define-fun d57 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d53 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d54 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d55 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d56 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next)))
(define-fun d58 ((s2 Bool) (s3 Bool)) Bool (and (not s3) (d51 s2)))
(define-fun d59 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (d21 s0 s1) (d52 s2 s3)))
(define-fun d60 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (n0.next Int)) Bool (or (d25 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 n0 s0.next s1.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0.next s0) (= s1.next s1) (= n0.next n0))))
(define-fun d61 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d57 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2.next s2) (= s3.next s3))))
(define-fun d62 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (n0.next Int)) Bool (and (d60 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 n0 s0.next s1.next n0.next) (d61 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next)))
(define-fun d63 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (d26 s0 s1) (d58 s2 s3)))
(define-fun d64 ((s4 Bool)) Bool (not s4))
(define-fun d65 () Bool false)
(define-fun d66 ((s4 Bool)) Bool (not s4))
(define-fun d67 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool)) Bool (and (not s5) (d59 s0 s1 s2 s3) (d64 s4)))
(define-fun d68 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (not s1) (not s1.next) (d62 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 n0 s0.next s1.next s2.next s3.next n0.next) (not s5) (not s5.next) (d64 s4) (d64 s4.next)))
(define-fun d69 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (not s1) (not s1.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0.next s0) (= s1.next s1) (= s2.next s2) (= s3.next s3) (= n0.next n0) (not s5) s5.next (d64 s4) (d64 s4.next)))
(define-fun d70 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (not s1) (not s1.next) (= s0.next s0) (= s1.next s1) (= s2.next s2) (= s3.next s3) (= n0.next n0) s5 s5.next d65))
(define-fun d71 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (not s1) s1.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d62 true false false false false false false true s0 s1 s2 s3 n0 s0.next s1.next s2.next s3.next n0.next) s5 (not s5.next) (d64 s4.next) (d66 s4)))
(define-fun d72 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and s1 s1.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d62 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 n0 s0.next s1.next s2.next s3.next n0.next) (not s5) (not s5.next) (d64 s4) (d64 s4.next)))
(define-fun d73 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and s1 (not s1.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d62 true false false false false false true false s0 s1 s2 s3 n0 s0.next s1.next s2.next s3.next n0.next) (not s5) (not s5.next) (d64 s4) (d64 s4.next)))
(define-fun d74 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (or (d68 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (d69 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (d70 s0 s1 s2 s3 s5 n0 s0.next s1.next s2.next s3.next s5.next n0.next) (d71 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (d72 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (d73 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next)))
(define-fun d75 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool)) Bool (and (not s5) (d63 s0 s1 s2 s3) (d64 s4)))
(define-fun d76 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool)) Bool (and (not s6) (d3 s0 s1 s2 s3)))
(define-fun d77 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s6.next Bool) (n0.next Int)) Bool (and (not s6) (not s6.next) (d13 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (= n0.next n0)))
(define-fun d78 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n0.next Int)) Bool (and s6 s6.next (d74 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next)))
(define-fun d79 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s6) s6.next (d14 s0 s1 s2 s3) (d67 s0.next s1.next s2.next s3.next s4.next s5.next) (= n0.next n0)))
(define-fun d80 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n0.next Int)) Bool (or (d77 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s6 n0 s0.next s1.next s2.next s3.next s6.next n0.next) (d78 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n0.next) (d79 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s6 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n0.next)))
(define-fun d81 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and s6 (d75 s0 s1 s2 s3 s4 s5)))
(define-fun d82 ((s0 Bool) (s1 Bool) (s2 Bool)) Bool (and (not s0) s1 (not s2)))
(define-fun d83 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 x7 s0 (not s1) s2 (not s0.next) (not s1.next) (not s2.next)))
(define-fun d84 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) x5 (not x6) (not x7) s0 (not s1) (not s2) (not s0.next) s1.next s2.next))
(define-fun d85 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 (not x6) (not x7) (not s0) (not s1) (not s2) s0.next (not s1.next) (not s2.next)))
(define-fun d86 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 x6 (not x7) (not s0) s1 s2 (not s0.next) (not s1.next) s2.next))
(define-fun d87 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) (not x7) (not s0) s1 (not s2) s0.next (not s1.next) s2.next))
(define-fun d88 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (or (d83 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (d84 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (d85 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (d86 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (d87 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next)))
(define-fun d89 ((s0 Bool) (s1 Bool) (s2 Bool)) Bool (and (not s0) (not s1) s2))
(define-fun d90 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool) (s7 Bool)) Bool (and (not s7) (d76 s0 s1 s2 s3 s6)))
(define-fun d91 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int)) Bool (and (not s7) (not s7.next) (d80 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n0.next)))
(define-fun d92 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s7 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s7.next Bool) (n0.next Int)) Bool (and s7 s7.next (d88 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (= n0.next n0)))
(define-fun d93 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s7.next Bool) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s7) s7.next (d81 s0 s1 s2 s3 s4 s5 s6) (d82 s0.next s1.next s2.next) (= n0.next n0)))
(define-fun d94 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int)) Bool (or (d91 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next) (d92 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s7 n0 s0.next s1.next s2.next s7.next n0.next) (d93 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 n0 s0.next s1.next s2.next s7.next n0.next)))
(define-fun d95 ((s0 Bool) (s1 Bool) (s2 Bool) (s7 Bool)) Bool (and s7 (d89 s0 s1 s2)))
(define-fun d96 ((s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and s8 (not s9) s10 s11))
(define-fun d97 ((x0 Bool) (x4 Bool) (x6 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x4 x6 (not s9) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d98 ((x0 Bool) (x3 Bool) (x6 Bool) (s8 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x3) x6 (not s8) (not s10) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d99 ((x0 Bool) (x3 Bool) (x7 Bool) (s8 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x3 (not x7) (not s8) (not s10) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d100 ((x0 Bool) (x3 Bool) (x7 Bool) (s8 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x3 x7 (not s8) s10 s8.next (not s9.next) s10.next s11.next))
(define-fun d101 ((x0 Bool) (x3 Bool) (x4 Bool) (s8 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x3) (not x4) (not s8) s10 s11 s8.next (not s9.next) s10.next s11.next))
(define-fun d102 ((x0 Bool) (x7 Bool) (s8 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x7 (not s8) s10 s11 s8.next (not s9.next) s10.next s11.next))
(define-fun d103 ((x0 Bool) (x1 Bool) (s8 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x1) s8 (not s9) s8.next (not s9.next) s10.next s11.next))
(define-fun d104 ((x0 Bool) (x4 Bool) (x5 Bool) (x7 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x4 x5 x7 (not s9) s8.next (not s9.next) s10.next s11.next))
(define-fun d105 ((x0 Bool) (x5 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x5) (not x7) (not s8) s9 (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d106 ((x0 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x7 s8 (not s9) (not s10) s8.next (not s9.next) s10.next s11.next))
(define-fun d107 ((x0 Bool) (x5 Bool) (x6 Bool) (s9 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x5) x6 (not s9) (not s10) s8.next (not s9.next) s10.next s11.next))
(define-fun d108 ((x0 Bool) (x4 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x4 x7 (not s8) s9 (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d109 ((x0 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x4 (not x5) (not x6) (not x7) (not s9) s8.next (not s9.next) s10.next s11.next))
(define-fun d110 ((x0 Bool) (x3 Bool) (x6 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x3 (not x6) (not s9) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d111 ((x0 Bool) (x3 Bool) (x4 Bool) (s8 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x3) (not x4) s8 (not s9) s8.next (not s9.next) s10.next s11.next))
(define-fun d112 ((x0 Bool) (x6 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x6 (not s8) s9 s10 s11 s8.next (not s9.next) s10.next s11.next))
(define-fun d113 ((x0 Bool) (x1 Bool) (x6 Bool) (s8 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x1) (not x6) (not s8) s10 s8.next (not s9.next) s10.next s11.next))
(define-fun d114 ((x0 Bool) (x4 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x4) (not x7) (not s8) (not s9) s11 s8.next (not s9.next) s10.next s11.next))
(define-fun d115 ((x0 Bool) (x5 Bool) (x6 Bool) (s8 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x5 x6 (not s8) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d116 ((x0 Bool) (x1 Bool) (x3 Bool) (x4 Bool) (s8 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x3 x4 (not s8) s10 s8.next (not s9.next) s10.next s11.next))
(define-fun d117 ((x0 Bool) (x4 Bool) (x6 Bool) (s8 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x4) (not x6) (not s8) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d118 ((x0 Bool) (x5 Bool) (x6 Bool) (s8 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x5) (not x6) (not s8) s10 s8.next (not s9.next) s10.next s11.next))
(define-fun d119 ((x0 Bool) (x5 Bool) (x7 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x5) x7 (not s9) s11 s8.next (not s9.next) s10.next s11.next))
(define-fun d120 ((x0 Bool) (x3 Bool) (x5 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x3 x5 (not s9) s11 s8.next (not s9.next) s10.next s11.next))
(define-fun d121 ((x0 Bool) (x3 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x3 s8 (not s9) s10 s8.next (not s9.next) s10.next s11.next))
(define-fun d122 ((x0 Bool) (x1 Bool) (s9 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x1) (not s9) (not s10) s8.next (not s9.next) s10.next s11.next))
(define-fun d123 ((x0 Bool) (x3 Bool) (x6 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x3) x6 (not s9) s8.next (not s9.next) s10.next s11.next))
(define-fun d124 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) x5 (not x6) x7 (not s8) (not s9) (not s10) s11 (not s8.next) s9.next (not s10.next) (not s11.next)))
(define-fun d125 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 (not x5) x6 (not x7) (not s8) (not s9) s10 s11 (not s8.next) s9.next (not s10.next) s11.next))
(define-fun d126 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 x7 (not s8) s9 (not s10) (not s11) (not s8.next) s9.next s10.next (not s11.next)))
(define-fun d127 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 x5 (not x6) (not x7) (not s8) (not s11) (not s8.next) (not s9.next) (not s10.next) (not s11.next)))
(define-fun d128 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 x5 (not x6) (not x7) (not s8) s10 (not s8.next) (not s9.next) (not s10.next) (not s11.next)))
(define-fun d129 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 x5 (not x6) (not x7) (not s9) (not s8.next) (not s9.next) (not s10.next) (not s11.next)))
(define-fun d130 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) (not x6) (not x7) s8 (not s9) (not s10) s11 (not s8.next) s9.next s10.next s11.next))
(define-fun d131 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) x6 x7 (not s8) s9 s10 (not s11) (not s8.next) (not s9.next) s10.next (not s11.next)))
(define-fun d132 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 x6 (not x7) s8 (not s9) (not s10) (not s11) (not s8.next) (not s9.next) (not s10.next) s11.next))
(define-fun d133 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) x7 (not s8) (not s9) (not s10) (not s11) s8.next (not s9.next) (not s10.next) (not s11.next)))
(define-fun d134 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 (not x6) (not x7) (not s8) s9 s10 s11 (not s8.next) (not s9.next) s10.next s11.next))
(define-fun d135 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) x7 s8 (not s9) s10 (not s11) s8.next (not s9.next) (not s10.next) s11.next))
(define-fun d136 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 (not x7) (not s8) (not s9) s10 (not s11) s8.next (not s9.next) s10.next (not s11.next)))
(define-fun d137 ((x0 Bool) (x2 Bool) (s8 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x2) (not s8) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d138 ((x0 Bool) (x2 Bool) (s8 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x2) (not s8) s10 s8.next (not s9.next) s10.next s11.next))
(define-fun d139 ((x0 Bool) (x2 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x2) (not s9) s8.next (not s9.next) s10.next s11.next))
(define-fun d140 ((x0 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not s8) s9 (not s10) s11 (not s8.next) s9.next (not s10.next) s11.next))
(define-fun d141 ((x0 Bool) (x1 Bool) (s8 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x1) (not s8) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d142 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (or (d97 x0 x4 x6 s9 s11 s8.next s9.next s10.next s11.next) (d98 x0 x3 x6 s8 s10 s11 s8.next s9.next s10.next s11.next) (d99 x0 x3 x7 s8 s10 s11 s8.next s9.next s10.next s11.next) (d100 x0 x3 x7 s8 s10 s8.next s9.next s10.next s11.next) (d101 x0 x3 x4 s8 s10 s11 s8.next s9.next s10.next s11.next) (d102 x0 x7 s8 s10 s11 s8.next s9.next s10.next s11.next) (d103 x0 x1 s8 s9 s8.next s9.next s10.next s11.next) (d104 x0 x4 x5 x7 s9 s8.next s9.next s10.next s11.next) (d105 x0 x5 x7 s8 s9 s11 s8.next s9.next s10.next s11.next) (d106 x0 x7 s8 s9 s10 s8.next s9.next s10.next s11.next) (d107 x0 x5 x6 s9 s10 s8.next s9.next s10.next s11.next) (d108 x0 x4 x7 s8 s9 s11 s8.next s9.next s10.next s11.next) (d109 x0 x4 x5 x6 x7 s9 s8.next s9.next s10.next s11.next) (d110 x0 x3 x6 s9 s11 s8.next s9.next s10.next s11.next) (d111 x0 x3 x4 s8 s9 s8.next s9.next s10.next s11.next) (d112 x0 x6 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d113 x0 x1 x6 s8 s10 s8.next s9.next s10.next s11.next) (d114 x0 x4 x7 s8 s9 s11 s8.next s9.next s10.next s11.next) (d115 x0 x5 x6 s8 s11 s8.next s9.next s10.next s11.next) (d116 x0 x1 x3 x4 s8 s10 s8.next s9.next s10.next s11.next) (d117 x0 x4 x6 s8 s11 s8.next s9.next s10.next s11.next) (d118 x0 x5 x6 s8 s10 s8.next s9.next s10.next s11.next) (d119 x0 x5 x7 s9 s11 s8.next s9.next s10.next s11.next) (d120 x0 x3 x5 s9 s11 s8.next s9.next s10.next s11.next) (d121 x0 x3 s8 s9 s10 s8.next s9.next s10.next s11.next) (d122 x0 x1 s9 s10 s8.next s9.next s10.next s11.next) (d123 x0 x3 x6 s9 s8.next s9.next s10.next s11.next) (d124 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d125 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d126 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d127 x0 x1 x2 x3 x4 x5 x6 x7 s8 s11 s8.next s9.next s10.next s11.next) (d128 x0 x1 x2 x3 x4 x5 x6 x7 s8 s10 s8.next s9.next s10.next s11.next) (d129 x0 x1 x2 x3 x4 x5 x6 x7 s9 s8.next s9.next s10.next s11.next) (d130 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d131 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d132 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d133 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d134 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d135 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d136 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d137 x0 x2 s8 s11 s8.next s9.next s10.next s11.next) (d138 x0 x2 s8 s10 s8.next s9.next s10.next s11.next) (d139 x0 x2 s9 s8.next s9.next s10.next s11.next) (d140 x0 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d141 x0 x1 s8 s11 s8.next s9.next s10.next s11.next)))
(define-fun d143 ((s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (not s8) s9 (not s10) s11))
(define-fun d144 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (d90 s0 s1 s2 s3 s6 s7) (d96 s8 s9 s10 s11)))
(define-fun d145 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int)) Bool (or (d94 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0.next s0) (= s1.next s1) (= s2.next s2) (= s3.next s3) (= s4.next s4) (= s5.next s5) (= s6.next s6) (= s7.next s7) (= n0.next n0))))
(define-fun d146 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (or (d142 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8.next s8) (= s9.next s9) (= s10.next s10) (= s11.next s11))))
(define-fun d147 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (n0.next Int)) Bool (and (d145 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next) (d146 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next)))
(define-fun d148 ((s0 Bool) (s1 Bool) (s2 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (d95 s0 s1 s2 s7) (d143 s8 s9 s10 s11)))
(define-fun d149 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n1 Int) (n1.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n1.next (+ n1 1))))
(define-fun d150 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n1 Int) (n1.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n1.next n1)))
(define-fun d151 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (n0.next Int) (n1.next Int)) Bool (and (d147 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next n0.next) (or (d149 x0 x1 x2 x3 x4 x5 x6 x7 n1 n1.next) (d150 x0 x1 x2 x3 x4 x5 x6 x7 n1 n1.next))))
(define-fun d152 ((s0 Bool) (s12 Bool)) Bool (and (not s12) (d0 s0)))
(define-fun d153 ((s12 Bool) (n0 Int) (n1 Int) (s12.next Bool) (n0.next Int) (n1.next Int)) Bool (and (not s12) (not s12.next) d1 (= n0.next n0) (= n1.next n1)))
(define-fun d154 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (n0.next Int) (n1.next Int)) Bool (and s12 s12.next (d151 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next n0.next n1.next)))
(define-fun d155 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s12 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (n0.next Int) (n1.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s12) s12.next (d2 s0) (d144 s0.next s1.next s2.next s3.next s6.next s7.next s8.next s9.next s10.next s11.next) (= n0.next n0) (= n1.next n1)))
(define-fun d156 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (n0.next Int) (n1.next Int)) Bool (or (d153 s12 n0 n1 s12.next n0.next n1.next) (d154 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next n0.next n1.next) (d155 x0 x1 x2 x3 x4 x5 x6 x7 s0 s12 n0 n1 s0.next s1.next s2.next s3.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next n0.next n1.next)))
(define-fun d157 ((s0 Bool) (s1 Bool) (s2 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool)) Bool (and s12 (d148 s0 s1 s2 s7 s8 s9 s10 s11)))
;
(define-fun d158 ((n0 Int) (K0 Int)) Bool (= K0 n0))
(define-fun d159 ((n1 Int) (K1 Int)) Bool (= K1 n1))
(define-fun d160 ((K0 Int) (K1 Int)) Bool (< 10 (+ K0 K1)))
(define-fun d161 ((s0 Bool) (s1 Bool) (s2 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (n0 Int) (n1 Int) (K0 Int) (K1 Int)) Bool (and (d157 s0 s1 s2 s7 s8 s9 s10 s11 s12) (d158 n0 K0) (d159 n1 K1) (d160 K0 K1)))
(define-fun d162 ((s0 Bool) (s12 Bool) (n0 Int) (n1 Int)) Bool (and (d152 s0 s12) (= 0 n0) (= 0 n1)))
;
(define-fun I () Bool (! (d162 s0 s12 n0 n1) :init true))
(define-fun T () Bool (! (d156 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next n0.next n1.next) :trans true))
(define-fun O () Bool (! (not (d161 s0 s1 s2 s7 s8 s9 s10 s11 s12 n0 n1 K0 K1)) :invar-property 0))
