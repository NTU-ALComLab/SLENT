(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun y24 () Bool)
(declare-fun y24.next () Bool)
(declare-fun y25 () Bool)
(declare-fun y25.next () Bool)
(declare-fun y26 () Bool)
(declare-fun y26.next () Bool)
(declare-fun y27 () Bool)
(declare-fun y27.next () Bool)
(declare-fun y28 () Bool)
(declare-fun y28.next () Bool)
(declare-fun y29 () Bool)
(declare-fun y29.next () Bool)
(declare-fun y30 () Bool)
(declare-fun y30.next () Bool)
(declare-fun y31 () Bool)
(declare-fun y31.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun n0 () Int)
(declare-fun n0.next () Int)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! y24 :next y24.next))
(define-fun nxt9 () Bool (! y25 :next y25.next))
(define-fun nxt10 () Bool (! y26 :next y26.next))
(define-fun nxt11 () Bool (! y27 :next y27.next))
(define-fun nxt12 () Bool (! y28 :next y28.next))
(define-fun nxt13 () Bool (! y29 :next y29.next))
(define-fun nxt14 () Bool (! y30 :next y30.next))
(define-fun nxt15 () Bool (! y31 :next y31.next))
(define-fun nxt16 () Bool (! s0 :next s0.next))
(define-fun nxt17 () Bool (! s1 :next s1.next))
(define-fun nxt18 () Bool (! s2 :next s2.next))
(define-fun nxt19 () Bool (! s3 :next s3.next))
(define-fun nxt20 () Bool (! s4 :next s4.next))
(define-fun nxt21 () Bool (! s5 :next s5.next))
(define-fun nxt22 () Bool (! s6 :next s6.next))
(define-fun nxt23 () Bool (! s7 :next s7.next))
(define-fun nxt24 () Bool (! s8 :next s8.next))
(define-fun nxt25 () Bool (! s9 :next s9.next))
(define-fun nxt26 () Bool (! s10 :next s10.next))
(define-fun nxt27 () Bool (! s11 :next s11.next))
(define-fun nxt28 () Bool (! n0 :next n0.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun leftAngle ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) x7))
(define-fun rightAngle ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) x6 (not x7)))
(define-fun d0 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (not s0) s1 (not s2) s3))
(define-fun d1 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 (not x2) x3 (not x4) x5 (not x6) x7 (not s0) s1 s2 (not s3) (not s0.next) (not s1.next) (not s2.next) s3.next))
(define-fun d2 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 (not x5) x6 (not x7) (not s0) s1 (not s2) (not s3) s0.next (not s1.next) (not s2.next) (not s3.next)))
(define-fun d3 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 x6 (not x7) (not s0) s1 s2 s3 (not s0.next) s1.next s2.next (not s3.next)))
(define-fun d4 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) s0 (not s1) (not s2) (not s3) (not s0.next) (not s1.next) s2.next s3.next))
(define-fun d5 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) x4 x5 (not x6) (not x7) (not s0) (not s1) s2 (not s3) (not s0.next) s1.next (not s2.next) (not s3.next)))
(define-fun d6 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 (not x2) x3 (not x4) (not x5) x6 (not x7) (not s0) (not s1) (not s2) s3 (not s0.next) (not s1.next) s2.next (not s3.next)))
(define-fun d7 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) (not x7) (not s0) s1 (not s2) s3 s0.next (not s1.next) (not s2.next) s3.next))
(define-fun d8 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) x5 (not x6) (not x7) (not s0) (not s1) (not s2) (not s3) (not s0.next) s1.next s2.next s3.next))
(define-fun d9 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 (not x6) (not x7) s0 (not s1) (not s2) s3 (not s0.next) (not s1.next) (not s2.next) (not s3.next)))
(define-fun d10 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d1 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d2 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d3 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d4 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d5 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d6 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d7 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d8 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d9 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next)))
(define-fun d11 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (not s0) (not s1) s2 s3))
(define-fun d12 ((s0 Bool)) Bool (not s0))
(define-fun d13 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d14 ((s0 Bool)) Bool (not s0))
(define-fun d15 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n0.next (+ n0 1))))
(define-fun d16 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n0.next n0)))
(define-fun d17 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (n0 Int) (s0.next Bool) (n0.next Int)) Bool (and (d13 x0 s0 s0.next) (or (d15 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next) (d16 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next))))
(define-fun d18 ((s0 Bool) (s1 Bool)) Bool (and (not s1) (d12 s0)))
(define-fun d19 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (n0.next Int)) Bool (and (= s1.next s1) (not (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (not (rightAngle x0 x1 x2 x3 x4 x5 x6 x7)) (d17 x0 x1 x2 x3 x4 x5 x6 x7 s0 n0 s0.next n0.next)))
(define-fun d20 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (and (not s1) s1.next (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (and s1 (not s1.next) (rightAngle x0 x1 x2 x3 x4 x5 x6 x7))))
(define-fun d21 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (n0.next Int)) Bool (and (= s0.next s0) (= n0.next n0) (d20 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d22 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (n0.next Int)) Bool (or (d19 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 n0 s0.next s1.next n0.next) (d21 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 n0 s0.next s1.next n0.next)))
(define-fun d23 ((s0 Bool) (s1 Bool)) Bool (and (not s1) (d14 s0)))
(define-fun d24 ((s2 Bool)) Bool (not s2))
(define-fun d25 ((x0 Bool) (x2 Bool) (x4 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x2) x4 (not s2) s2.next))
(define-fun d26 ((x0 Bool) (x2 Bool) (x4 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x2 (not x4) x6 (not s2) s2.next))
(define-fun d27 ((x0 Bool) (x4 Bool) (x5 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x4 (not x5) x7 (not s2) s2.next))
(define-fun d28 ((x0 Bool) (x2 Bool) (x5 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x2) x5 (not s2) s2.next))
(define-fun d29 ((x0 Bool) (x2 Bool) (x4 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x2 (not x4) x7 (not s2) s2.next))
(define-fun d30 ((x0 Bool) (x2 Bool) (x3 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x2) (not x3) x6 (not x7) (not s2) s2.next))
(define-fun d31 ((x0 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x5 (not x6) (not x7) (not s2) s2.next))
(define-fun d32 ((x0 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x3) x4 (not x5) (not s2) s2.next))
(define-fun d33 ((x0 Bool) (x3 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x3 (not x6) (not s2) s2.next))
(define-fun d34 ((x0 Bool) (x3 Bool) (x5 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x3 x5 (not s2) s2.next))
(define-fun d35 ((x0 Bool) (x1 Bool) (x2 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 x2 (not s2) s2.next))
(define-fun d36 ((x0 Bool) (x1 Bool) (x2 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x1) (not x2) (not s2) s2.next))
(define-fun d37 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d25 x0 x2 x4 s2 s2.next) (d26 x0 x2 x4 x6 s2 s2.next) (d27 x0 x4 x5 x7 s2 s2.next) (d28 x0 x2 x5 s2 s2.next) (d29 x0 x2 x4 x7 s2 s2.next) (d30 x0 x2 x3 x6 x7 s2 s2.next) (d31 x0 x5 x6 x7 s2 s2.next) (d32 x0 x3 x4 x5 s2 s2.next) (d33 x0 x3 x6 s2 s2.next) (d34 x0 x3 x5 s2 s2.next) (d35 x0 x1 x2 s2 s2.next) (d36 x0 x1 x2 s2 s2.next)))
(define-fun d38 ((s2 Bool)) Bool s2)
(define-fun d39 ((s2 Bool)) Bool (not s2))
(define-fun d40 ((x0 Bool) (x1 Bool) (x2 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 (not x2) (not x4) (not x5) x6 x7 (not s2) (not s2.next)))
(define-fun d41 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x7 (not s2) (not s2.next)))
(define-fun d42 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 (not x5) x6 (not x7) (not s2) (not s2.next)))
(define-fun d43 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 (not s2) (not s2.next)))
(define-fun d44 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 (not x2) x3 (not x4) (not x5) x6 (not s2) (not s2.next)))
(define-fun d45 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) (not x4) (not x5) (not x6) (not s2) (not s2.next)))
(define-fun d46 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) (not s2) (not s2.next)))
(define-fun d47 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d40 x0 x1 x2 x4 x5 x6 x7 s2 s2.next) (d41 x0 x1 x2 x3 x4 x5 x7 s2 s2.next) (d42 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next) (d43 x0 x1 x2 x3 x4 x5 x6 s2 s2.next) (d44 x0 x1 x2 x3 x4 x5 x6 s2 s2.next) (d45 x0 x1 x2 x3 x4 x5 x6 s2 s2.next) (d46 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d48 ((s2 Bool)) Bool (not s2))
(define-fun d49 ((s2 Bool) (s3 Bool)) Bool (and (not s3) (d39 s2)))
(define-fun d50 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not s3) (not s3.next) (not (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (not (rightAngle x0 x1 x2 x3 x4 x5 x6 x7)) (d47 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d51 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and s3 s3.next (not (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (not (rightAngle x0 x1 x2 x3 x4 x5 x6 x7)) (d37 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d52 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not s3) s3.next (leftAngle x0 x1 x2 x3 x4 x5 x6 x7) (d48 s2) (d24 s2.next)))
(define-fun d53 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and s3 (not s3.next) (rightAngle x0 x1 x2 x3 x4 x5 x6 x7) (d38 s2) (d39 s2.next)))
(define-fun d54 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d50 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d51 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d52 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d53 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next)))
(define-fun d55 ((s2 Bool) (s3 Bool)) Bool (and (not s3) (d48 s2)))
(define-fun d56 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (d18 s0 s1) (d49 s2 s3)))
(define-fun d57 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (n0.next Int)) Bool (or (d22 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 n0 s0.next s1.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0.next s0) (= s1.next s1) (= n0.next n0))))
(define-fun d58 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d54 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2.next s2) (= s3.next s3))))
(define-fun d59 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (n0.next Int)) Bool (and (d57 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 n0 s0.next s1.next n0.next) (d58 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next)))
(define-fun d60 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (d23 s0 s1) (d55 s2 s3)))
(define-fun d61 ((s4 Bool)) Bool (not s4))
(define-fun d62 () Bool false)
(define-fun d63 ((s4 Bool)) Bool (not s4))
(define-fun d64 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool)) Bool (and (not s5) (d56 s0 s1 s2 s3) (d61 s4)))
(define-fun d65 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (not s1) (not s1.next) (d59 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 n0 s0.next s1.next s2.next s3.next n0.next) (not s5) (not s5.next) (d61 s4) (d61 s4.next)))
(define-fun d66 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (not s1) (not s1.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0.next s0) (= s1.next s1) (= s2.next s2) (= s3.next s3) (= n0.next n0) (not s5) s5.next (d61 s4) (d61 s4.next)))
(define-fun d67 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (not s1) (not s1.next) (= s0.next s0) (= s1.next s1) (= s2.next s2) (= s3.next s3) (= n0.next n0) s5 s5.next d62))
(define-fun d68 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (not s1) s1.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d59 true false false false false false false true s0 s1 s2 s3 n0 s0.next s1.next s2.next s3.next n0.next) s5 (not s5.next) (d61 s4.next) (d63 s4)))
(define-fun d69 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and s1 s1.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d59 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 n0 s0.next s1.next s2.next s3.next n0.next) (not s5) (not s5.next) (d61 s4) (d61 s4.next)))
(define-fun d70 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and s1 (not s1.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d59 true false false false false false true false s0 s1 s2 s3 n0 s0.next s1.next s2.next s3.next n0.next) (not s5) (not s5.next) (d61 s4) (d61 s4.next)))
(define-fun d71 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (or (d65 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (d66 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (d67 s0 s1 s2 s3 s5 n0 s0.next s1.next s2.next s3.next s5.next n0.next) (d68 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (d69 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (d70 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next)))
(define-fun d72 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool)) Bool (and (not s5) (d60 s0 s1 s2 s3) (d61 s4)))
(define-fun d73 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool)) Bool (and (not s6) (d0 s0 s1 s2 s3)))
(define-fun d74 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s6.next Bool) (n0.next Int)) Bool (and (not s6) (not s6.next) (d10 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (= n0.next n0)))
(define-fun d75 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n0.next Int)) Bool (and s6 s6.next (d71 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next)))
(define-fun d76 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s6) s6.next (d11 s0 s1 s2 s3) (d64 s0.next s1.next s2.next s3.next s4.next s5.next) (= n0.next n0)))
(define-fun d77 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n0.next Int)) Bool (or (d74 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s6 n0 s0.next s1.next s2.next s3.next s6.next n0.next) (d75 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 s6 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n0.next) (d76 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s6 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n0.next)))
(define-fun d78 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and s6 (d72 s0 s1 s2 s3 s4 s5)))
(define-fun d79 ((s0 Bool) (s1 Bool) (s2 Bool)) Bool (and (not s0) s1 (not s2)))
(define-fun d80 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 x7 s0 (not s1) s2 (not s0.next) (not s1.next) (not s2.next)))
(define-fun d81 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) x5 (not x6) (not x7) s0 (not s1) (not s2) (not s0.next) s1.next s2.next))
(define-fun d82 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 (not x6) (not x7) (not s0) (not s1) (not s2) s0.next (not s1.next) (not s2.next)))
(define-fun d83 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 x6 (not x7) (not s0) s1 s2 (not s0.next) (not s1.next) s2.next))
(define-fun d84 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) (not x7) (not s0) s1 (not s2) s0.next (not s1.next) s2.next))
(define-fun d85 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (or (d80 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (d81 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (d82 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (d83 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (d84 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next)))
(define-fun d86 ((s0 Bool) (s1 Bool) (s2 Bool)) Bool (and (not s0) (not s1) s2))
(define-fun d87 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool) (s7 Bool)) Bool (and (not s7) (d73 s0 s1 s2 s3 s6)))
(define-fun d88 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int)) Bool (and (not s7) (not s7.next) (d77 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 s6 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n0.next)))
(define-fun d89 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s7 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s7.next Bool) (n0.next Int)) Bool (and s7 s7.next (d85 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (= n0.next n0)))
(define-fun d90 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s7.next Bool) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s7) s7.next (d78 s0 s1 s2 s3 s4 s5 s6) (d79 s0.next s1.next s2.next) (= n0.next n0)))
(define-fun d91 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int)) Bool (or (d88 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 s6 s7 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next) (d89 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s7 n0 s0.next s1.next s2.next s7.next n0.next) (d90 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 n0 s0.next s1.next s2.next s7.next n0.next)))
(define-fun d92 ((s0 Bool) (s1 Bool) (s2 Bool) (s7 Bool)) Bool (and s7 (d86 s0 s1 s2)))
(define-fun d93 ((s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and s8 (not s9) s10 s11))
(define-fun d94 ((x0 Bool) (x4 Bool) (x6 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x4 x6 (not s9) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d95 ((x0 Bool) (x3 Bool) (x6 Bool) (s8 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x3) x6 (not s8) (not s10) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d96 ((x0 Bool) (x3 Bool) (x7 Bool) (s8 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x3 (not x7) (not s8) (not s10) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d97 ((x0 Bool) (x3 Bool) (x7 Bool) (s8 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x3 x7 (not s8) s10 s8.next (not s9.next) s10.next s11.next))
(define-fun d98 ((x0 Bool) (x3 Bool) (x4 Bool) (s8 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x3) (not x4) (not s8) s10 s11 s8.next (not s9.next) s10.next s11.next))
(define-fun d99 ((x0 Bool) (x7 Bool) (s8 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x7 (not s8) s10 s11 s8.next (not s9.next) s10.next s11.next))
(define-fun d100 ((x0 Bool) (x1 Bool) (s8 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x1) s8 (not s9) s8.next (not s9.next) s10.next s11.next))
(define-fun d101 ((x0 Bool) (x4 Bool) (x5 Bool) (x7 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x4 x5 x7 (not s9) s8.next (not s9.next) s10.next s11.next))
(define-fun d102 ((x0 Bool) (x5 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x5) (not x7) (not s8) s9 (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d103 ((x0 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x7 s8 (not s9) (not s10) s8.next (not s9.next) s10.next s11.next))
(define-fun d104 ((x0 Bool) (x5 Bool) (x6 Bool) (s9 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x5) x6 (not s9) (not s10) s8.next (not s9.next) s10.next s11.next))
(define-fun d105 ((x0 Bool) (x4 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x4 x7 (not s8) s9 (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d106 ((x0 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x4 (not x5) (not x6) (not x7) (not s9) s8.next (not s9.next) s10.next s11.next))
(define-fun d107 ((x0 Bool) (x3 Bool) (x6 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x3 (not x6) (not s9) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d108 ((x0 Bool) (x3 Bool) (x4 Bool) (s8 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x3) (not x4) s8 (not s9) s8.next (not s9.next) s10.next s11.next))
(define-fun d109 ((x0 Bool) (x6 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x6 (not s8) s9 s10 s11 s8.next (not s9.next) s10.next s11.next))
(define-fun d110 ((x0 Bool) (x1 Bool) (x6 Bool) (s8 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x1) (not x6) (not s8) s10 s8.next (not s9.next) s10.next s11.next))
(define-fun d111 ((x0 Bool) (x4 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x4) (not x7) (not s8) (not s9) s11 s8.next (not s9.next) s10.next s11.next))
(define-fun d112 ((x0 Bool) (x5 Bool) (x6 Bool) (s8 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x5 x6 (not s8) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d113 ((x0 Bool) (x1 Bool) (x3 Bool) (x4 Bool) (s8 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x3 x4 (not s8) s10 s8.next (not s9.next) s10.next s11.next))
(define-fun d114 ((x0 Bool) (x4 Bool) (x6 Bool) (s8 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x4) (not x6) (not s8) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d115 ((x0 Bool) (x5 Bool) (x6 Bool) (s8 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x5) (not x6) (not s8) s10 s8.next (not s9.next) s10.next s11.next))
(define-fun d116 ((x0 Bool) (x5 Bool) (x7 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x5) x7 (not s9) s11 s8.next (not s9.next) s10.next s11.next))
(define-fun d117 ((x0 Bool) (x3 Bool) (x5 Bool) (s9 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x3 x5 (not s9) s11 s8.next (not s9.next) s10.next s11.next))
(define-fun d118 ((x0 Bool) (x3 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x3 s8 (not s9) s10 s8.next (not s9.next) s10.next s11.next))
(define-fun d119 ((x0 Bool) (x1 Bool) (s9 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x1) (not s9) (not s10) s8.next (not s9.next) s10.next s11.next))
(define-fun d120 ((x0 Bool) (x3 Bool) (x6 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x3) x6 (not s9) s8.next (not s9.next) s10.next s11.next))
(define-fun d121 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) x5 (not x6) x7 (not s8) (not s9) (not s10) s11 (not s8.next) s9.next (not s10.next) (not s11.next)))
(define-fun d122 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 (not x5) x6 (not x7) (not s8) (not s9) s10 s11 (not s8.next) s9.next (not s10.next) s11.next))
(define-fun d123 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 x7 (not s8) s9 (not s10) (not s11) (not s8.next) s9.next s10.next (not s11.next)))
(define-fun d124 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 x5 (not x6) (not x7) (not s8) (not s11) (not s8.next) (not s9.next) (not s10.next) (not s11.next)))
(define-fun d125 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 x5 (not x6) (not x7) (not s8) s10 (not s8.next) (not s9.next) (not s10.next) (not s11.next)))
(define-fun d126 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 x5 (not x6) (not x7) (not s9) (not s8.next) (not s9.next) (not s10.next) (not s11.next)))
(define-fun d127 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) (not x6) (not x7) s8 (not s9) (not s10) s11 (not s8.next) s9.next s10.next s11.next))
(define-fun d128 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) x6 x7 (not s8) s9 s10 (not s11) (not s8.next) (not s9.next) s10.next (not s11.next)))
(define-fun d129 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 x6 (not x7) s8 (not s9) (not s10) (not s11) (not s8.next) (not s9.next) (not s10.next) s11.next))
(define-fun d130 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) x7 (not s8) (not s9) (not s10) (not s11) s8.next (not s9.next) (not s10.next) (not s11.next)))
(define-fun d131 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 (not x6) (not x7) (not s8) s9 s10 s11 (not s8.next) (not s9.next) s10.next s11.next))
(define-fun d132 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) x7 s8 (not s9) s10 (not s11) s8.next (not s9.next) (not s10.next) s11.next))
(define-fun d133 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 (not x7) (not s8) (not s9) s10 (not s11) s8.next (not s9.next) s10.next (not s11.next)))
(define-fun d134 ((x0 Bool) (x2 Bool) (s8 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x2) (not s8) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d135 ((x0 Bool) (x2 Bool) (s8 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x2) (not s8) s10 s8.next (not s9.next) s10.next s11.next))
(define-fun d136 ((x0 Bool) (x2 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x2) (not s9) s8.next (not s9.next) s10.next s11.next))
(define-fun d137 ((x0 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not s8) s9 (not s10) s11 (not s8.next) s9.next (not s10.next) s11.next))
(define-fun d138 ((x0 Bool) (x1 Bool) (s8 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x1) (not s8) (not s11) s8.next (not s9.next) s10.next s11.next))
(define-fun d139 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (or (d94 x0 x4 x6 s9 s11 s8.next s9.next s10.next s11.next) (d95 x0 x3 x6 s8 s10 s11 s8.next s9.next s10.next s11.next) (d96 x0 x3 x7 s8 s10 s11 s8.next s9.next s10.next s11.next) (d97 x0 x3 x7 s8 s10 s8.next s9.next s10.next s11.next) (d98 x0 x3 x4 s8 s10 s11 s8.next s9.next s10.next s11.next) (d99 x0 x7 s8 s10 s11 s8.next s9.next s10.next s11.next) (d100 x0 x1 s8 s9 s8.next s9.next s10.next s11.next) (d101 x0 x4 x5 x7 s9 s8.next s9.next s10.next s11.next) (d102 x0 x5 x7 s8 s9 s11 s8.next s9.next s10.next s11.next) (d103 x0 x7 s8 s9 s10 s8.next s9.next s10.next s11.next) (d104 x0 x5 x6 s9 s10 s8.next s9.next s10.next s11.next) (d105 x0 x4 x7 s8 s9 s11 s8.next s9.next s10.next s11.next) (d106 x0 x4 x5 x6 x7 s9 s8.next s9.next s10.next s11.next) (d107 x0 x3 x6 s9 s11 s8.next s9.next s10.next s11.next) (d108 x0 x3 x4 s8 s9 s8.next s9.next s10.next s11.next) (d109 x0 x6 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d110 x0 x1 x6 s8 s10 s8.next s9.next s10.next s11.next) (d111 x0 x4 x7 s8 s9 s11 s8.next s9.next s10.next s11.next) (d112 x0 x5 x6 s8 s11 s8.next s9.next s10.next s11.next) (d113 x0 x1 x3 x4 s8 s10 s8.next s9.next s10.next s11.next) (d114 x0 x4 x6 s8 s11 s8.next s9.next s10.next s11.next) (d115 x0 x5 x6 s8 s10 s8.next s9.next s10.next s11.next) (d116 x0 x5 x7 s9 s11 s8.next s9.next s10.next s11.next) (d117 x0 x3 x5 s9 s11 s8.next s9.next s10.next s11.next) (d118 x0 x3 s8 s9 s10 s8.next s9.next s10.next s11.next) (d119 x0 x1 s9 s10 s8.next s9.next s10.next s11.next) (d120 x0 x3 x6 s9 s8.next s9.next s10.next s11.next) (d121 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d122 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d123 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d124 x0 x1 x2 x3 x4 x5 x6 x7 s8 s11 s8.next s9.next s10.next s11.next) (d125 x0 x1 x2 x3 x4 x5 x6 x7 s8 s10 s8.next s9.next s10.next s11.next) (d126 x0 x1 x2 x3 x4 x5 x6 x7 s9 s8.next s9.next s10.next s11.next) (d127 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d128 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d129 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d130 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d131 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d132 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d133 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d134 x0 x2 s8 s11 s8.next s9.next s10.next s11.next) (d135 x0 x2 s8 s10 s8.next s9.next s10.next s11.next) (d136 x0 x2 s9 s8.next s9.next s10.next s11.next) (d137 x0 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d138 x0 x1 s8 s11 s8.next s9.next s10.next s11.next)))
(define-fun d140 ((s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (not s8) s9 (not s10) s11))
(define-fun d141 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (d87 s0 s1 s2 s3 s6 s7) (d93 s8 s9 s10 s11)))
(define-fun d142 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int)) Bool (or (d91 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 s6 s7 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0.next s0) (= s1.next s1) (= s2.next s2) (= s3.next s3) (= s4.next s4) (= s5.next s5) (= s6.next s6) (= s7.next s7) (= n0.next n0))))
(define-fun d143 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (or (d139 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8.next s8) (= s9.next s9) (= s10.next s10) (= s11.next s11))))
(define-fun d144 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (n0.next Int)) Bool (and (d142 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 s6 s7 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next) (d143 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next)))
(define-fun d145 ((s0 Bool) (s1 Bool) (s2 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (d92 s0 s1 s2 s7) (d140 s8 s9 s10 s11)))
;
;
(define-fun I () Bool (! (d141 s0 s1 s2 s3 s6 s7 s8 s9 s10 s11) :init true))
(define-fun T () Bool (! (d144 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next n0.next) :trans true))
(define-fun O () Bool (! (not (d145 s0 s1 s2 s7 s8 s9 s10 s11)) :invar-property 0))
