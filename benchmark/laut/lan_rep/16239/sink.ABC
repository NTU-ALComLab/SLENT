(declare-fun sigmaStar_safe_48 () String)
(declare-fun b_sigmaStar_safe_48 () Bool)
(declare-fun literal_11 () String)
(declare-fun b_literal_11 () Bool)
(declare-fun literal_13 () String)
(declare-fun b_literal_13 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_8 () String)
(declare-fun b_x_8 () Bool)
(declare-fun x_12 () String)
(declare-fun b_x_12 () Bool)
(declare-fun x_14 () String)
(declare-fun b_x_14 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)

(assert (and b_sigmaStar_safe_48 (RegexIn sigmaStar_safe_48 (RegexStar (RegexUnion (re.range "0" "9") (RegexUnion (re.range "a" "z") (re.range "A" "Z")))))))
(assert (and b_literal_11 (= literal_11 "<center><font color=\"red\">nonumericweight: \"")))
(assert (and b_literal_13 (= literal_13 "\"</font></center><br />")))
(assert (RegexIn atkPtn (Str2Reg "\\0075\\0072\\006C\\0028'\\006a\\0061\\0076\\0061\\0073\\0063\\0072\\0069\\0070\\0074\\003a\\0061\\006c\\0065\\0072\\0074\\0028.1027\\0058.1053\\0053\\0027\\0029'\\0029")))
(assert (= atk_sink (Concat atk_sigmaStar_1 (Concat atkPtn atk_sigmaStar_2))))
(assert (= b_x_8 (and (= x_8 (ReplaceAll sigmaStar_safe_48 (RegexUnion (RegexUnion (Str2Reg "." ) (Str2Reg "|" ) ) (Str2Reg " " ) ) "_") ) b_sigmaStar_safe_48) ))
(assert (= b_x_12 (and (= x_12 (Concat literal_11 x_8) ) b_literal_11 b_x_8) ))
(assert (= b_x_14 (and (= x_14 (Concat x_12 literal_13) ) b_x_12 b_literal_13) ))
(assert (and (= sink x_14) (= sink atk_sink) b_x_14))
(assert (> 10 (+ (Length sigmaStar_safe_48) (Length sink)) ) )
(check-sat)
